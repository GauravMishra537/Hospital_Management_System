package hospital.management.system;import net.proteanit.sql.DbUtils;import javax.swing.*;import java.awt.*;import java.awt.event.ActionEvent;import java.sql.ResultSet;public class Ambulance extends JFrame {    JTable table;    Ambulance() {        JPanel panel = new JPanel();        panel.setBounds(5, 5, 890, 590);        panel.setBackground(new Color(90, 156, 163));        panel.setLayout(null);        add(panel);        table = new JTable();        table.setBounds(10, 40, 900, 450);        table.setBackground(new Color(90, 156, 163));        table.setFont(new Font("Tahoma", Font.BOLD, 12));        panel.add(table);        // Load ambulance data        loadAmbulanceData();        JLabel label1 = new JLabel("Name");        label1.setBounds(31, 11, 100, 14);        label1.setFont(new Font("Tahoma", Font.BOLD, 14));        panel.add(label1);        JLabel label2 = new JLabel("Driver");        label2.setBounds(180, 11, 100, 14);        label2.setFont(new Font("Tahoma", Font.BOLD, 14));        panel.add(label2);        JLabel label3 = new JLabel("Phone");        label3.setBounds(320, 11, 100, 14);        label3.setFont(new Font("Tahoma", Font.BOLD, 14));        panel.add(label3);        JLabel label4 = new JLabel("Vehicle No");        label4.setBounds(460, 11, 100, 14);        label4.setFont(new Font("Tahoma", Font.BOLD, 14));        panel.add(label4);        JLabel label5 = new JLabel("Availability");        label5.setBounds(600, 11, 100, 14);        label5.setFont(new Font("Tahoma", Font.BOLD, 14));        panel.add(label5);        JLabel label6 = new JLabel("Details");        label6.setBounds(740, 11, 100, 14);        label6.setFont(new Font("Tahoma", Font.BOLD, 14));        panel.add(label6);        JLabel label7 = new JLabel("Status");        label7.setBounds(820, 11, 100, 14);        label7.setFont(new Font("Tahoma", Font.BOLD, 14));        panel.add(label7);        // Request ambulance button        JButton requestBtn = new JButton("REQUEST AMBULANCE");        requestBtn.setBounds(100, 510, 200, 30);        requestBtn.setBackground(Color.BLACK);        requestBtn.setForeground(Color.WHITE);        panel.add(requestBtn);        // Free ambulance button        JButton freeBtn = new JButton("FREE AMBULANCE");        freeBtn.setBounds(350, 510, 200, 30);        freeBtn.setBackground(Color.BLACK);        freeBtn.setForeground(Color.WHITE);        panel.add(freeBtn);        // Back button        JButton backBtn = new JButton("BACK");        backBtn.setBounds(600, 510, 120, 30);        backBtn.setBackground(Color.BLACK);        backBtn.setForeground(Color.WHITE);        panel.add(backBtn);        // Request ambulance action        requestBtn.addActionListener((ActionEvent e) -> {            int row = table.getSelectedRow();            if (row == -1) {                JOptionPane.showMessageDialog(null, "Please select an ambulance first!");                return;            }            String ambName = table.getValueAt(row, 0).toString();            try {                conn c = new conn();                String q = "UPDATE ambulance SET availability='Busy' WHERE name='" + ambName + "'";                c.statement.executeUpdate(q);                JOptionPane.showMessageDialog(null, "ðŸš‘ " + ambName + " is now BOOKED!");                loadAmbulanceData();            } catch (Exception ex) {                ex.printStackTrace();                JOptionPane.showMessageDialog(null, "Error while requesting ambulance!");            }        });        // Free ambulance action        freeBtn.addActionListener((ActionEvent e) -> {            int row = table.getSelectedRow();            if (row == -1) {                JOptionPane.showMessageDialog(null, "Please select an ambulance first!");                return;            }            String ambName = table.getValueAt(row, 0).toString();            try {                conn c = new conn();                String q = "UPDATE ambulance SET availability='Available' WHERE name='" + ambName + "'";                c.statement.executeUpdate(q);                JOptionPane.showMessageDialog(null, "âœ… " + ambName + " is now FREE!");                loadAmbulanceData();            } catch (Exception ex) {                ex.printStackTrace();                JOptionPane.showMessageDialog(null, "Error while freeing ambulance!");            }        });        // Back action        backBtn.addActionListener(e -> setVisible(false));        setUndecorated(true);        setSize(900, 600);        setLayout(null);        setLocation(300, 200);        setVisible(true);    }    // Method to reload ambulance data    private void loadAmbulanceData() {        try {            conn c = new conn();            // Added CASE column for Status            String q = "SELECT name, driver_name, driver_phone, vehicle_no, availability, details, " +                       "CASE WHEN availability='Available' THEN 'Free' ELSE 'Booked' END AS Status " +                       "FROM ambulance";            ResultSet resultSet = c.statement.executeQuery(q);            table.setModel(DbUtils.resultSetToTableModel(resultSet));        } catch (Exception e) {            e.printStackTrace();            JOptionPane.showMessageDialog(null, "Error loading ambulance data!");        }    }    public static void main(String[] args) {        new Ambulance();    }}